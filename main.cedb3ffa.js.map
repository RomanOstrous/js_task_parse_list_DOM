{"version":3,"sources":["scripts/main.js"],"names":["parseList","document","querySelector","numSalary","salary","slice","split","join","sortList","list","items","Array","from","children","sort","a","b","salaryA","dataset","salaryB","append","getEmployees","map","item","name","innerText"],"mappings":";AAAA,aA0BA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBA,IAAMA,EAAYC,SAASC,cAAc,MAEnCC,EAAY,SAACC,GAAW,OAAEA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAEhE,SAASC,EAASC,GACVC,IAAAA,EAAQC,MAAMC,KAAKH,EAAKI,UAE9BH,EAAMI,KAAK,SAACC,EAAGC,GACPC,IAAAA,EAAUd,EAAUY,EAAEG,QAAQd,QAG7Be,OAFShB,EAAUa,EAAEE,QAAQd,QAEnBa,IAGnBR,EAAKW,OAALX,MAAAA,EAAeC,EAAAA,IAGjB,SAASW,EAAaZ,GACb,OAAA,EAAIA,EAAKI,UAAUS,IAAI,SAAAC,GAAI,OAAA,EAAA,CAChCC,KAAMD,EAAKE,WAAcF,EAAKL,WAIlCV,EAASR,GACTqB,EAAarB","file":"main.cedb3ffa.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst parseList = document.querySelector('ul');\n\nconst numSalary = (salary) => +(salary.slice(1).split(',').join(''));\n\nfunction sortList(list) {\n  const items = Array.from(list.children);\n\n  items.sort((a, b) => {\n    const salaryA = numSalary(a.dataset.salary);\n    const salaryB = numSalary(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  list.append(...items);\n}\n\nfunction getEmployees(list) {\n  return [...list.children].map(item => ({\n    name: item.innerText, ...item.dataset,\n  }));\n}\n\nsortList(parseList);\ngetEmployees(parseList);\n"]}